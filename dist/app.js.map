{"version":3,"sources":["webpack://vuex-keg/webpack/universalModuleDefinition","webpack://vuex-keg/webpack/bootstrap","webpack://vuex-keg/external \"lodash\"","webpack://vuex-keg/./src/Keg.ts","webpack://vuex-keg/./src/index.ts"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Keg","options","_options","tap","injectedAction","keg","assign","__assign","sKeg","sKegOptions","src_openPlugins","agedPlugins","context","payload","pluginOptions","openedPlugins","external_lodash_","plugin","getKegFromStore","store","plugins","src_filterPlugins","_a","except","only","shouldHave","filteredPlugins","_i","shouldHave_1","length","resolveHook","hook","pipeRunner","hookList","__awaiter","undefined","Array","isArray","result","hookList_1","sent","_b","beers","beforeHook","afterHook","setKegToStore","src_agePlugins","src_assign","kegRunner","kegPlugins","kegOptions","Error","kegPayload","_c","filteredKegPlugins","_context","_payload","_d","_typeof","actions_1","keys","forEach"],"mappings":"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","file":"app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vuex-keg\", [\"lodash\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vuex-keg\"] = factory(require(\"lodash\"));\n\telse\n\t\troot[\"vuex-keg\"] = factory(root[\"lodash\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import {keg} from './'\r\nimport {ActionHandler, IKegContext, IKegOptions, TInjectedFunction} from './types'\r\n\r\n/**\r\n * Vuex custom utils container class\r\n */\r\nexport default class Keg<T = IKegContext> {\r\n  private _options: IKegOptions\r\n  constructor(options: IKegOptions = {}) {\r\n    this._options = options\r\n  }\r\n\r\n  /**\r\n   * use custom utils\r\n   */\r\n  tap(\r\n    injectedAction: {[name: string]: TInjectedFunction<T>} | TInjectedFunction<T>,\r\n    options: IKegOptions = {},\r\n    name?: string,\r\n  ): {[name: string]: ActionHandler<any, any>} | ActionHandler<any, any> {\r\n    const {_options} = this\r\n    return keg(injectedAction, Object.assign({}, _options, options), name)\r\n  }\r\n\r\n  /**\r\n   * change default options\r\n   */\r\n  set options(options: IKegOptions) {\r\n    this._options = options\r\n  }\r\n\r\n  /**\r\n   * get default options\r\n   */\r\n  get options(): IKegOptions {\r\n    return {...this._options}\r\n  }\r\n}\r\n","import {forEach, omit, pick} from 'lodash'\r\nimport {ActionContext, Store} from 'vuex/types'\r\nimport Keg from './Keg'\r\nimport {\r\n  ActionHandler,\r\n  IAgedPlugins,\r\n  IKegContext,\r\n  IKegOptions,\r\n  IKegStore,\r\n  IOpenedPlugins,\r\n  IPluginRunTimeOptions,\r\n  IPlugins,\r\n  IVuexKegOptions,\r\n  TAgedPlugin,\r\n  TFnHook,\r\n  TInjectedFunction,\r\n  TKegReturn,\r\n  TPlugin,\r\n} from './types'\r\nexport const sKeg = Symbol('keg')\r\nexport const sKegOptions = Symbol('kegOptions')\r\nexport * from './types'\r\nexport {Keg}\r\n\r\n/**\r\n * call plugins with store\r\n */\r\nconst _agePlugins = (plugins: IPlugins, store: Store<any>): IAgedPlugins => {\r\n  const agedPlugins: IAgedPlugins = {}\r\n  forEach(plugins, (plugin: TPlugin, key: string) => {\r\n    agedPlugins[key] = plugin(store)\r\n  })\r\n  return agedPlugins\r\n}\r\n\r\n/**\r\n * call aged plugins with context and payload of an action\r\n */\r\nconst _openPlugins = (\r\n  agedPlugins: IAgedPlugins,\r\n  context: ActionContext<any, any>,\r\n  payload: any,\r\n  pluginOptions: IPluginRunTimeOptions = {},\r\n): IOpenedPlugins => {\r\n  const openedPlugins: IOpenedPlugins = {}\r\n  forEach(agedPlugins, (plugin: TAgedPlugin, key: string) => {\r\n    openedPlugins[key] = plugin(context, payload, pluginOptions[key])\r\n  })\r\n  return openedPlugins\r\n}\r\n\r\nconst getKegFromStore = (store: IKegStore<any>):\r\n{plugins: {[name: string]: TAgedPlugin}, options: IKegOptions} =>\r\n{\r\n  return {\r\n    plugins: store[sKeg],\r\n    options: store[sKegOptions],\r\n  }\r\n}\r\n\r\nconst setKegToStore = (store: IKegStore<any>, {plugins, options}: {\r\nplugins: {[name: string]: TAgedPlugin},\r\noptions: IKegOptions,\r\n}): void => {\r\n  store[sKeg] = plugins\r\n  store[sKegOptions] = options\r\n}\r\n\r\nconst filterPlugins = (\r\n  plugins: IOpenedPlugins,\r\n  {except, only, shouldHave}: {except?: string[], only?: string[], shouldHave?: string[]},\r\n): IOpenedPlugins => {\r\n  let filteredPlugins = plugins\r\n  if(except){filteredPlugins = omit(filteredPlugins, except)}\r\n  if(only){filteredPlugins = pick(filteredPlugins, only)}\r\n  if(shouldHave){\r\n    for(let key of shouldHave){\r\n      filteredPlugins[key] = plugins[key]\r\n    }\r\n  }\r\n  return filteredPlugins\r\n}\r\n\r\nconst resolveHook = (\r\n  context: IKegContext,\r\n  plugins: IOpenedPlugins,\r\n  payload: any,\r\n  hook: string | TFnHook,\r\n) => {\r\n  if(typeof hook === 'string'){\r\n    const plugin = plugins[hook]\r\n    if(typeof plugin === 'function'){\r\n      // eslint-disable-next-line no-await-in-loop\r\n      return plugin(payload)\r\n    }\r\n    /* istanbul ignore next */\r\n    if(process.env.NODE_ENV !== 'production'){\r\n      console.warn(\r\n        '[vuex-keg pipeRunner] hook name should be plugin name in the plugins')\r\n    }\r\n    return payload\r\n  }else if(typeof hook === 'function'){\r\n    // eslint-disable-next-line no-await-in-loop\r\n    return hook(context, payload)\r\n  }\r\n  /* istanbul ignore next  */\r\n  if(process.env.NODE_ENV !== 'production'){\r\n    console.warn('[vuex-keg pipeRunner] hook should be function or string')\r\n  }\r\n  return payload\r\n}\r\n\r\nconst pipeRunner = async (\r\n  context: IKegContext,\r\n  plugins: IOpenedPlugins,\r\n  payload: any,\r\n  hookList?: string | string[] | TFnHook | TFnHook[],\r\n) => {\r\n  if(!hookList){return payload}\r\n  if(Array.isArray(hookList)){\r\n    let result: any = payload\r\n    for(const hook of hookList){\r\n      // eslint-disable-next-line no-await-in-loop\r\n      result = await resolveHook(context, plugins, result, hook)\r\n    }\r\n    return result\r\n  }\r\n  return resolveHook(context, plugins, payload, hookList)\r\n}\r\n\r\n/**\r\n * Vuex keg plugin\r\n */\r\nexport default (options: IVuexKegOptions = {}): TKegReturn => {\r\n  const {plugins = {}, beers = {}, beforeHook, afterHook} = options\r\n  return (store: IKegStore<any>) => {\r\n    setKegToStore(store, {\r\n      plugins: _agePlugins({...plugins, ...beers}, store),\r\n      options: {beforeHook, afterHook},\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Vuex custom utils container function\r\n */\r\nexport function kegRunner<T>(\r\n  name: string,\r\n  injectedAction: TInjectedFunction<T>,\r\n  options: IKegOptions = {},\r\n): ActionHandler<any, any> {\r\n  return async function kegTap(context, payload) {\r\n    const {plugins: kegPlugins, options: kegOptions} = getKegFromStore(this)\r\n    if(!kegPlugins || !kegOptions){\r\n      throw new Error('[vuex-keg] keg-plugin is undefined in Store')\r\n    }\r\n    const {\r\n      only,\r\n      except,\r\n      shouldHave,\r\n      payload: kegPayload,\r\n      beforeHook = kegOptions.beforeHook,\r\n      afterHook = kegOptions.afterHook,\r\n      pluginOptions,\r\n    } = options\r\n    let filteredKegPlugins = filterPlugins(kegPlugins, {except, only, shouldHave})\r\n    const _context: IKegContext = {...context,\r\n      get name(): string {\r\n        /* istanbul ignore if  */\r\n        if(!name && process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test'){\r\n          console.warn(\r\n            '[vuex-keg] name is undefined. the keg won\\'t know what function name' +\r\n            ' is in case of using function injectedAction',\r\n          )\r\n        }\r\n        return name\r\n      },\r\n    }\r\n    const plugins: IOpenedPlugins = _openPlugins(\r\n      filteredKegPlugins, _context, payload, pluginOptions,\r\n    )\r\n    const _payload = await pipeRunner(_context, plugins, payload, beforeHook)\r\n    const result = await injectedAction({...plugins, ..._context}, _payload, kegPayload)\r\n    return pipeRunner(_context, plugins, result, afterHook)\r\n  }\r\n}\r\n\r\n/**\r\n * keg operator\r\n */\r\nexport function keg<T = IKegContext>(\r\n  injectedAction: {[name: string]: TInjectedFunction<T>} | TInjectedFunction<T>,\r\n  options?: IKegOptions,\r\n  name?: string,\r\n): {[name: string]: ActionHandler<any, any>} | ActionHandler<any, any> {\r\n  if(typeof injectedAction === 'function'){\r\n    return kegRunner<T>(name, injectedAction, options)\r\n  }\r\n  if(!Array.isArray(injectedAction) && typeof injectedAction === 'object'){\r\n    const actions: {[name: string]: ActionHandler<any, any>} = {}\r\n    Object.keys(injectedAction).forEach((key) => {\r\n      actions[key] = kegRunner<T>(key, injectedAction[key], options)\r\n    })\r\n    return actions\r\n  }\r\n  throw new Error('[vuex-keg] only support object & function')\r\n}\r\n"],"sourceRoot":""}